"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/backoffice/(default)/management/page",{

/***/ "(app-pages-browser)/./hooks/useAccessLogger.ts":
/*!**********************************!*\
  !*** ./hooks/useAccessLogger.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n\n\nconst useAccessLogger = (pageName)=>{\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const logAccess = async ()=>{\n            try {\n                const accessData = {\n                    page: pageName || pathname || \"unknown\",\n                    userAgent: navigator.userAgent,\n                    timestamp: new Date().toISOString()\n                };\n                console.log(\"Access logged successfully:\", accessData);\n            } catch (error) {\n                console.error(\"Error logging access:\", error);\n            }\n        };\n        // Log access when component mounts\n        logAccess();\n    }, [\n        pathname,\n        pageName\n    ]);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useAccessLogger);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUFjY2Vzc0xvZ2dlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQWtDO0FBQ1k7QUFROUMsTUFBTUUsa0JBQWtCLENBQUNDO0lBQ3ZCLE1BQU1DLFdBQVdILDREQUFXQTtJQUU1QkQsZ0RBQVNBLENBQUM7UUFDUixNQUFNSyxZQUFZO1lBQ2hCLElBQUk7Z0JBQ0YsTUFBTUMsYUFBNEI7b0JBQ2hDQyxNQUFNSixZQUFZQyxZQUFZO29CQUM5QkksV0FBV0MsVUFBVUQsU0FBUztvQkFDOUJFLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztnQkFDbkM7Z0JBRUFDLFFBQVFDLEdBQUcsQ0FBQywrQkFBK0JSO1lBQzdDLEVBQUUsT0FBT1MsT0FBTztnQkFDZEYsUUFBUUUsS0FBSyxDQUFDLHlCQUF5QkE7WUFDekM7UUFDRjtRQUVBLG1DQUFtQztRQUNuQ1Y7SUFDRixHQUFHO1FBQUNEO1FBQVVEO0tBQVM7QUFDekI7QUFFQSwrREFBZUQsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VBY2Nlc3NMb2dnZXIudHM/ZWY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVBhdGhuYW1lIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcclxuXHJcbmludGVyZmFjZSBBY2Nlc3NMb2dEYXRhIHtcclxuICBwYWdlOiBzdHJpbmc7XHJcbiAgdXNlckFnZW50OiBzdHJpbmc7XHJcbiAgdGltZXN0YW1wOiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IHVzZUFjY2Vzc0xvZ2dlciA9IChwYWdlTmFtZT86IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IHBhdGhuYW1lID0gdXNlUGF0aG5hbWUoKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IGxvZ0FjY2VzcyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBhY2Nlc3NEYXRhOiBBY2Nlc3NMb2dEYXRhID0ge1xyXG4gICAgICAgICAgcGFnZTogcGFnZU5hbWUgfHwgcGF0aG5hbWUgfHwgJ3Vua25vd24nLFxyXG4gICAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxyXG4gICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coJ0FjY2VzcyBsb2dnZWQgc3VjY2Vzc2Z1bGx5OicsIGFjY2Vzc0RhdGEpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvZ2dpbmcgYWNjZXNzOicsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBMb2cgYWNjZXNzIHdoZW4gY29tcG9uZW50IG1vdW50c1xyXG4gICAgbG9nQWNjZXNzKCk7XHJcbiAgfSwgW3BhdGhuYW1lLCBwYWdlTmFtZV0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXNlQWNjZXNzTG9nZ2VyOyAiXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUGF0aG5hbWUiLCJ1c2VBY2Nlc3NMb2dnZXIiLCJwYWdlTmFtZSIsInBhdGhuYW1lIiwibG9nQWNjZXNzIiwiYWNjZXNzRGF0YSIsInBhZ2UiLCJ1c2VyQWdlbnQiLCJuYXZpZ2F0b3IiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useAccessLogger.ts\n"));

/***/ })

});