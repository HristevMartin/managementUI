"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/backoffice/(default)/management/page",{

/***/ "(app-pages-browser)/./hooks/useAccessLogger.ts":
/*!**********************************!*\
  !*** ./hooks/useAccessLogger.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n\n\nconst useAccessLogger = (pageName)=>{\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const logAccess = async ()=>{\n            try {\n                // Try to get client IP from external service as fallback\n                let detectedClientIP;\n                try {\n                    const ipResponse = await fetch(\"https://api.ipify.org?format=json\");\n                    console.log(\"ipResponse\", ipResponse);\n                    const ipData = await ipResponse.json();\n                    detectedClientIP = ipData.ip;\n                } catch (error) {\n                    console.log(\"Could not fetch external IP:\", error);\n                }\n                const accessData = {\n                    page: pageName || pathname || \"unknown\",\n                    userAgent: navigator.userAgent,\n                    timestamp: new Date().toISOString(),\n                    clientIP: detectedClientIP\n                };\n                console.log(\"accessData\", accessData);\n                const apiResponse = await fetch(\"http://localhost:8080/travel/save-user-track\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(accessData)\n                });\n                if (apiResponse.ok) {\n                    console.log(\"Access logged successfully\");\n                } else {\n                    console.error(\"Failed to log access\");\n                }\n                console.log(\"Access logged successfully:\", accessData);\n            } catch (error) {\n                console.error(\"Error logging access:\", error);\n            }\n        };\n        // Log access when component mounts\n        logAccess();\n    }, [\n        pathname,\n        pageName\n    ]);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useAccessLogger);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUFjY2Vzc0xvZ2dlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQWtDO0FBQ1k7QUFTOUMsTUFBTUUsa0JBQWtCLENBQUNDO0lBQ3JCLE1BQU1DLFdBQVdILDREQUFXQTtJQUU1QkQsZ0RBQVNBLENBQUM7UUFDTixNQUFNSyxZQUFZO1lBQ2QsSUFBSTtnQkFDQSx5REFBeUQ7Z0JBQ3pELElBQUlDO2dCQUNKLElBQUk7b0JBQ0EsTUFBTUMsYUFBYSxNQUFNQyxNQUFNO29CQUMvQkMsUUFBUUMsR0FBRyxDQUFDLGNBQWNIO29CQUMxQixNQUFNSSxTQUFTLE1BQU1KLFdBQVdLLElBQUk7b0JBQ3BDTixtQkFBbUJLLE9BQU9FLEVBQUU7Z0JBQ2hDLEVBQUUsT0FBT0MsT0FBTztvQkFDWkwsUUFBUUMsR0FBRyxDQUFDLGdDQUFnQ0k7Z0JBQ2hEO2dCQUVBLE1BQU1DLGFBQTRCO29CQUM5QkMsTUFBTWIsWUFBWUMsWUFBWTtvQkFDOUJhLFdBQVdDLFVBQVVELFNBQVM7b0JBQzlCRSxXQUFXLElBQUlDLE9BQU9DLFdBQVc7b0JBQ2pDQyxVQUFVaEI7Z0JBQ2Q7Z0JBRUFHLFFBQVFDLEdBQUcsQ0FBQyxjQUFjSztnQkFFMUIsTUFBTVEsY0FBYyxNQUFNZixNQUFPLGdEQUErQztvQkFDNUVnQixRQUFRO29CQUNSQyxTQUFTO3dCQUNMLGdCQUFnQjtvQkFDcEI7b0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ2I7Z0JBQ3pCO2dCQUVBLElBQUlRLFlBQVlNLEVBQUUsRUFBRTtvQkFDaEJwQixRQUFRQyxHQUFHLENBQUM7Z0JBQ2hCLE9BQU87b0JBQ0hELFFBQVFLLEtBQUssQ0FBQztnQkFDbEI7Z0JBRUFMLFFBQVFDLEdBQUcsQ0FBQywrQkFBK0JLO1lBQy9DLEVBQUUsT0FBT0QsT0FBTztnQkFDWkwsUUFBUUssS0FBSyxDQUFDLHlCQUF5QkE7WUFDM0M7UUFDSjtRQUVBLG1DQUFtQztRQUNuQ1Q7SUFDSixHQUFHO1FBQUNEO1FBQVVEO0tBQVM7QUFDM0I7QUFFQSwrREFBZUQsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VBY2Nlc3NMb2dnZXIudHM/ZWY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVBhdGhuYW1lIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcclxuXHJcbmludGVyZmFjZSBBY2Nlc3NMb2dEYXRhIHtcclxuICAgIHBhZ2U6IHN0cmluZztcclxuICAgIHVzZXJBZ2VudDogc3RyaW5nO1xyXG4gICAgdGltZXN0YW1wOiBzdHJpbmc7XHJcbiAgICBjbGllbnRJUD86IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgdXNlQWNjZXNzTG9nZ2VyID0gKHBhZ2VOYW1lPzogc3RyaW5nKSA9PiB7XHJcbiAgICBjb25zdCBwYXRobmFtZSA9IHVzZVBhdGhuYW1lKCk7XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBjb25zdCBsb2dBY2Nlc3MgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAvLyBUcnkgdG8gZ2V0IGNsaWVudCBJUCBmcm9tIGV4dGVybmFsIHNlcnZpY2UgYXMgZmFsbGJhY2tcclxuICAgICAgICAgICAgICAgIGxldCBkZXRlY3RlZENsaWVudElQO1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpcFJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmlwaWZ5Lm9yZz9mb3JtYXQ9anNvbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdpcFJlc3BvbnNlJywgaXBSZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXBEYXRhID0gYXdhaXQgaXBSZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGV0ZWN0ZWRDbGllbnRJUCA9IGlwRGF0YS5pcDtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NvdWxkIG5vdCBmZXRjaCBleHRlcm5hbCBJUDonLCBlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgYWNjZXNzRGF0YTogQWNjZXNzTG9nRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBwYWdlOiBwYWdlTmFtZSB8fCBwYXRobmFtZSB8fCAndW5rbm93bicsXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxyXG4gICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNsaWVudElQOiBkZXRlY3RlZENsaWVudElQLFxyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWNjZXNzRGF0YScsIGFjY2Vzc0RhdGEpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC90cmF2ZWwvc2F2ZS11c2VyLXRyYWNrYCwge1xyXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGFjY2Vzc0RhdGEpLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGFwaVJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0FjY2VzcyBsb2dnZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBsb2cgYWNjZXNzJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0FjY2VzcyBsb2dnZWQgc3VjY2Vzc2Z1bGx5OicsIGFjY2Vzc0RhdGEpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9nZ2luZyBhY2Nlc3M6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgLy8gTG9nIGFjY2VzcyB3aGVuIGNvbXBvbmVudCBtb3VudHNcclxuICAgICAgICBsb2dBY2Nlc3MoKTtcclxuICAgIH0sIFtwYXRobmFtZSwgcGFnZU5hbWVdKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZUFjY2Vzc0xvZ2dlcjsgIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVBhdGhuYW1lIiwidXNlQWNjZXNzTG9nZ2VyIiwicGFnZU5hbWUiLCJwYXRobmFtZSIsImxvZ0FjY2VzcyIsImRldGVjdGVkQ2xpZW50SVAiLCJpcFJlc3BvbnNlIiwiZmV0Y2giLCJjb25zb2xlIiwibG9nIiwiaXBEYXRhIiwianNvbiIsImlwIiwiZXJyb3IiLCJhY2Nlc3NEYXRhIiwicGFnZSIsInVzZXJBZ2VudCIsIm5hdmlnYXRvciIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNsaWVudElQIiwiYXBpUmVzcG9uc2UiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useAccessLogger.ts\n"));

/***/ })

});