"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/backoffice/(default)/register/page",{

/***/ "(app-pages-browser)/./services/userService.ts":
/*!*********************************!*\
  !*** ./services/userService.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logOutUser: function() { return /* binding */ logOutUser; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; }\n/* harmony export */ });\nlet apiUrlip = \"http://localhost:8080\";\nconst registerUser = async (data)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/travel/register\");\n    console.log(\"the url is\", apiUrl);\n    try {\n        console.log(\"getting in here\");\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            console.log(\"error while calling the api\", response);\n        }\n        console.log(\"show me the response!!\", response);\n        const responseData = await response.json();\n        console.log(\"show me the response.status\", response.status);\n        if (response.status === 200) {\n            return {\n                success: true,\n                data: responseData\n            };\n        } else {\n            console.log(\"Registration failed:\", responseData.message);\n            return {\n                success: false,\n                error: responseData.message || \"Registration failed\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(error.message);\n    }\n};\nconst loginUser = async (data)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/auth/login\");\n    try {\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        console.log(\"show me the response\", response);\n        const responseData = await response.json();\n        if (response.status === 200) {\n            return {\n                success: true,\n                message: responseData\n            };\n        } else {\n            return {\n                success: false,\n                error: responseData.message || \"Unknown error occurred\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(\"Network error\");\n    }\n};\nconst logOutUser = async (access_token)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/logout\");\n    console.log(\"show me the access token\", access_token);\n    try {\n        const response = await fetch(apiUrl, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(access_token)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Logout failed\");\n        }\n        let data = await response.json();\n        console.log(\"data\", data);\n        if (data.status === 200) {\n            return {\n                success: true\n            };\n        } else {\n            return {\n                success: false,\n                error: \"Logout failed\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(\"Network error\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL3VzZXJTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQVlBLElBQUlBLFdBQVdDLHVCQUF1QztBQUUvQyxNQUFNRyxlQUFlLE9BQU9DO0lBQ2pDLE1BQU1DLFNBQVMsR0FBWSxPQUFUTixVQUFTO0lBQzNCTyxRQUFRQyxHQUFHLENBQUMsY0FBY0Y7SUFFMUIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFDWixNQUFNQyxXQUFXLE1BQU1DLE1BQU1KLFFBQVE7WUFDbkNLLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDVjtRQUN2QjtRQUdBLElBQUksQ0FBQ0ksU0FBU08sRUFBRSxFQUFDO1lBQ2ZULFFBQVFDLEdBQUcsQ0FBQywrQkFBK0JDO1FBQzdDO1FBRUFGLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJDO1FBQ3RDLE1BQU1RLGVBQWUsTUFBTVIsU0FBU1MsSUFBSTtRQUN4Q1gsUUFBUUMsR0FBRyxDQUFDLCtCQUErQkMsU0FBU1UsTUFBTTtRQUUxRCxJQUFJVixTQUFTVSxNQUFNLEtBQUssS0FBSztZQUMzQixPQUFPO2dCQUFFQyxTQUFTO2dCQUFNZixNQUFNWTtZQUFhO1FBQzdDLE9BQU87WUFDTFYsUUFBUUMsR0FBRyxDQUFDLHdCQUF3QlMsYUFBYUksT0FBTztZQUN4RCxPQUFPO2dCQUNMRCxTQUFTO2dCQUNURSxPQUFPTCxhQUFhSSxPQUFPLElBQUk7WUFDakM7UUFDRjtJQUNGLEVBQUUsT0FBT0MsT0FBWTtRQUNuQmYsUUFBUWUsS0FBSyxDQUFDLGlEQUFpREE7UUFDL0QsTUFBTSxJQUFJQyxNQUFNRCxNQUFNRCxPQUFPO0lBQy9CO0FBQ0YsRUFBRTtBQUVLLE1BQU1HLFlBQVksT0FBT25CO0lBQzlCLE1BQU1DLFNBQVMsR0FBWSxPQUFUTixVQUFTO0lBRTNCLElBQUk7UUFDRixNQUFNUyxXQUFXLE1BQU1DLE1BQU1KLFFBQVE7WUFDbkNLLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDVjtRQUN2QjtRQUNBRSxRQUFRQyxHQUFHLENBQUMsd0JBQXdCQztRQUNwQyxNQUFNUSxlQUFlLE1BQU1SLFNBQVNTLElBQUk7UUFDeEMsSUFBSVQsU0FBU1UsTUFBTSxLQUFLLEtBQUs7WUFDM0IsT0FBTztnQkFBRUMsU0FBUztnQkFBTUMsU0FBU0o7WUFBYTtRQUNoRCxPQUFPO1lBQ0wsT0FBTztnQkFDTEcsU0FBUztnQkFDVEUsT0FBT0wsYUFBYUksT0FBTyxJQUFJO1lBQ2pDO1FBQ0Y7SUFDRixFQUFFLE9BQU9DLE9BQU87UUFDZGYsUUFBUWUsS0FBSyxDQUFDLGlEQUFpREE7UUFDL0QsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0FBQ0YsRUFBRTtBQUVLLE1BQU1FLGFBQWEsT0FBT0M7SUFDL0IsTUFBTXBCLFNBQVMsR0FBWSxPQUFUTixVQUFTO0lBQzNCTyxRQUFRQyxHQUFHLENBQUMsNEJBQTRCa0I7SUFFeEMsSUFBSTtRQUNGLE1BQU1qQixXQUFXLE1BQU1DLE1BQU1KLFFBQVE7WUFDbkNLLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCZSxlQUFlLFVBQXVCLE9BQWJEO1lBQzNCO1FBQ0Y7UUFFQSxJQUFJLENBQUNqQixTQUFTTyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJTyxNQUFNO1FBQ2xCO1FBRUEsSUFBSWxCLE9BQU8sTUFBTUksU0FBU1MsSUFBSTtRQUM5QlgsUUFBUUMsR0FBRyxDQUFDLFFBQVFIO1FBRXBCLElBQUlBLEtBQUtjLE1BQU0sS0FBSyxLQUFLO1lBQ3ZCLE9BQU87Z0JBQUVDLFNBQVM7WUFBSztRQUN6QixPQUFPO1lBQ0wsT0FBTztnQkFBRUEsU0FBUztnQkFBT0UsT0FBTztZQUFnQjtRQUNsRDtJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkZixRQUFRZSxLQUFLLENBQUMsaURBQWlEQTtRQUMvRCxNQUFNLElBQUlDLE1BQU07SUFDbEI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NlcnZpY2VzL3VzZXJTZXJ2aWNlLnRzPzdjODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIFJlZ2lzdGVyRGF0YSB7XHJcbiAgZW1haWw6IHN0cmluZztcclxuICBwYXNzd29yZDogc3RyaW5nO1xyXG4gIHJlcGVhdFBhc3N3b3JkOiBzdHJpbmc7XHJcbiAgcm9sZTogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgTG9naW5EYXRhIHtcclxuICBlbWFpbDogc3RyaW5nO1xyXG4gIHBhc3N3b3JkOiBzdHJpbmc7XHJcbn1cclxuXHJcbmxldCBhcGlVcmxpcCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1RSQVZFTF9TRUNVUklUWTtcclxuXHJcbmV4cG9ydCBjb25zdCByZWdpc3RlclVzZXIgPSBhc3luYyAoZGF0YTogUmVnaXN0ZXJEYXRhKTogUHJvbWlzZTxhbnk+ID0+IHtcclxuICBjb25zdCBhcGlVcmwgPSBgJHthcGlVcmxpcH0vdHJhdmVsL3JlZ2lzdGVyYDtcclxuICBjb25zb2xlLmxvZygndGhlIHVybCBpcycsIGFwaVVybCk7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnZ2V0dGluZyBpbiBoZXJlJylcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vayl7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdlcnJvciB3aGlsZSBjYWxsaW5nIHRoZSBhcGknLCByZXNwb25zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ3Nob3cgbWUgdGhlIHJlc3BvbnNlISEnLCByZXNwb25zZSk7XHJcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBjb25zb2xlLmxvZygnc2hvdyBtZSB0aGUgcmVzcG9uc2Uuc3RhdHVzJywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuXHJcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogcmVzcG9uc2VEYXRhIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLmxvZygnUmVnaXN0cmF0aW9uIGZhaWxlZDonLCByZXNwb25zZURhdGEubWVzc2FnZSk7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6IHJlc3BvbnNlRGF0YS5tZXNzYWdlIHx8ICdSZWdpc3RyYXRpb24gZmFpbGVkJyxcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGZldGNoIG9wZXJhdGlvbjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ2luVXNlciA9IGFzeW5jIChkYXRhOiBMb2dpbkRhdGEpOiBQcm9taXNlPGFueT4gPT4ge1xyXG4gIGNvbnN0IGFwaVVybCA9IGAke2FwaVVybGlwfS9hdXRoL2xvZ2luYDtcclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICB9KTtcclxuICAgIGNvbnNvbGUubG9nKCdzaG93IG1lIHRoZSByZXNwb25zZScsIHJlc3BvbnNlKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiByZXNwb25zZURhdGEgfTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6IHJlc3BvbnNlRGF0YS5tZXNzYWdlIHx8ICdVbmtub3duIGVycm9yIG9jY3VycmVkJyxcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIGVycm9yJyk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ091dFVzZXIgPSBhc3luYyAoYWNjZXNzX3Rva2VuKSA9PiB7XHJcbiAgY29uc3QgYXBpVXJsID0gYCR7YXBpVXJsaXB9L2xvZ291dGA7XHJcbiAgY29uc29sZS5sb2coJ3Nob3cgbWUgdGhlIGFjY2VzcyB0b2tlbicsIGFjY2Vzc190b2tlbik7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGFwaVVybCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzX3Rva2VufWAsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTG9nb3V0IGZhaWxlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2coJ2RhdGEnLCBkYXRhKTtcclxuXHJcbiAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdMb2dvdXQgZmFpbGVkJyB9O1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGZldGNoIG9wZXJhdGlvbjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgZXJyb3InKTtcclxuICB9XHJcbn07Il0sIm5hbWVzIjpbImFwaVVybGlwIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1RSQVZFTF9TRUNVUklUWSIsInJlZ2lzdGVyVXNlciIsImRhdGEiLCJhcGlVcmwiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwicmVzcG9uc2VEYXRhIiwianNvbiIsInN0YXR1cyIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciIsImxvZ2luVXNlciIsImxvZ091dFVzZXIiLCJhY2Nlc3NfdG9rZW4iLCJBdXRob3JpemF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/userService.ts\n"));

/***/ })

});