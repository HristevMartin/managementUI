"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/backoffice/(default)/welcome-login/page",{

/***/ "(app-pages-browser)/./services/userService.ts":
/*!*********************************!*\
  !*** ./services/userService.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logOutUser: function() { return /* binding */ logOutUser; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; }\n/* harmony export */ });\nlet apiUrlip = \"http://localhost:8080\";\nconst registerUser = async (data)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/travel/register\");\n    console.log(\"the apiURL\", apiUrl);\n    try {\n        console.log(\"111\");\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        console.log(\"show me the responsedsadas\", response);\n        if (!response.ok) {\n            console.log(\"error while calling the api\", response);\n        }\n        console.log(\"show me the response!!\", response);\n        const responseData = await response.json();\n        console.log(\"show me the response.status\", response.status);\n        if (response.status === 200) {\n            return {\n                success: true,\n                data: responseData\n            };\n        } else {\n            console.log(\"Registration failed:\", responseData.message);\n            return {\n                success: false,\n                error: responseData.message || \"Registration failed\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(error.message);\n    }\n};\nconst loginUser = async (data)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/auth/login\");\n    try {\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        console.log(\"show me the response\", response);\n        const responseData = await response.json();\n        if (response.status === 200) {\n            return {\n                success: true,\n                message: responseData\n            };\n        } else {\n            return {\n                success: false,\n                error: responseData.message || \"Unknown error occurred\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(\"Network error\");\n    }\n};\nconst logOutUser = async (access_token)=>{\n    const apiUrl = \"\".concat(apiUrlip, \"/logout\");\n    console.log(\"show me the access token\", access_token);\n    try {\n        const response = await fetch(apiUrl, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(access_token)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Logout failed\");\n        }\n        let data = await response.json();\n        console.log(\"data\", data);\n        if (data.status === 200) {\n            return {\n                success: true\n            };\n        } else {\n            return {\n                success: false,\n                error: \"Logout failed\"\n            };\n        }\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw new Error(\"Network error\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL3VzZXJTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQVlBLElBQUlBLFdBQVdDLHVCQUF1QztBQUUvQyxNQUFNRyxlQUFlLE9BQU9DO0lBQ2pDLE1BQU1DLFNBQVMsR0FBWSxPQUFUTixVQUFTO0lBQzNCTyxRQUFRQyxHQUFHLENBQUMsY0FBY0Y7SUFFMUIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFDWixNQUFNQyxXQUFXLE1BQU1DLE1BQU1KLFFBQVE7WUFDbkNLLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDVjtRQUN2QjtRQUVBRSxRQUFRQyxHQUFHLENBQUMsOEJBQThCQztRQUUxQyxJQUFJLENBQUNBLFNBQVNPLEVBQUUsRUFBQztZQUNmVCxRQUFRQyxHQUFHLENBQUMsK0JBQStCQztRQUM3QztRQUVBRixRQUFRQyxHQUFHLENBQUMsMEJBQTBCQztRQUN0QyxNQUFNUSxlQUFlLE1BQU1SLFNBQVNTLElBQUk7UUFDeENYLFFBQVFDLEdBQUcsQ0FBQywrQkFBK0JDLFNBQVNVLE1BQU07UUFFMUQsSUFBSVYsU0FBU1UsTUFBTSxLQUFLLEtBQUs7WUFDM0IsT0FBTztnQkFBRUMsU0FBUztnQkFBTWYsTUFBTVk7WUFBYTtRQUM3QyxPQUFPO1lBQ0xWLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JTLGFBQWFJLE9BQU87WUFDeEQsT0FBTztnQkFDTEQsU0FBUztnQkFDVEUsT0FBT0wsYUFBYUksT0FBTyxJQUFJO1lBQ2pDO1FBQ0Y7SUFDRixFQUFFLE9BQU9DLE9BQVk7UUFDbkJmLFFBQVFlLEtBQUssQ0FBQyxpREFBaURBO1FBQy9ELE1BQU0sSUFBSUMsTUFBTUQsTUFBTUQsT0FBTztJQUMvQjtBQUNGLEVBQUU7QUFFSyxNQUFNRyxZQUFZLE9BQU9uQjtJQUM5QixNQUFNQyxTQUFTLEdBQVksT0FBVE4sVUFBUztJQUUzQixJQUFJO1FBQ0YsTUFBTVMsV0FBVyxNQUFNQyxNQUFNSixRQUFRO1lBQ25DSyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ1Y7UUFDdkI7UUFDQUUsUUFBUUMsR0FBRyxDQUFDLHdCQUF3QkM7UUFDcEMsTUFBTVEsZUFBZSxNQUFNUixTQUFTUyxJQUFJO1FBQ3hDLElBQUlULFNBQVNVLE1BQU0sS0FBSyxLQUFLO1lBQzNCLE9BQU87Z0JBQUVDLFNBQVM7Z0JBQU1DLFNBQVNKO1lBQWE7UUFDaEQsT0FBTztZQUNMLE9BQU87Z0JBQ0xHLFNBQVM7Z0JBQ1RFLE9BQU9MLGFBQWFJLE9BQU8sSUFBSTtZQUNqQztRQUNGO0lBQ0YsRUFBRSxPQUFPQyxPQUFPO1FBQ2RmLFFBQVFlLEtBQUssQ0FBQyxpREFBaURBO1FBQy9ELE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGLEVBQUU7QUFFSyxNQUFNRSxhQUFhLE9BQU9DO0lBQy9CLE1BQU1wQixTQUFTLEdBQVksT0FBVE4sVUFBUztJQUMzQk8sUUFBUUMsR0FBRyxDQUFDLDRCQUE0QmtCO0lBRXhDLElBQUk7UUFDRixNQUFNakIsV0FBVyxNQUFNQyxNQUFNSixRQUFRO1lBQ25DSyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO2dCQUNoQmUsZUFBZSxVQUF1QixPQUFiRDtZQUMzQjtRQUNGO1FBRUEsSUFBSSxDQUFDakIsU0FBU08sRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSU8sTUFBTTtRQUNsQjtRQUVBLElBQUlsQixPQUFPLE1BQU1JLFNBQVNTLElBQUk7UUFDOUJYLFFBQVFDLEdBQUcsQ0FBQyxRQUFRSDtRQUVwQixJQUFJQSxLQUFLYyxNQUFNLEtBQUssS0FBSztZQUN2QixPQUFPO2dCQUFFQyxTQUFTO1lBQUs7UUFDekIsT0FBTztZQUNMLE9BQU87Z0JBQUVBLFNBQVM7Z0JBQU9FLE9BQU87WUFBZ0I7UUFDbEQ7SUFDRixFQUFFLE9BQU9BLE9BQU87UUFDZGYsUUFBUWUsS0FBSyxDQUFDLGlEQUFpREE7UUFDL0QsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy91c2VyU2VydmljZS50cz83Yzg1Il0sInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBSZWdpc3RlckRhdGEge1xyXG4gIGVtYWlsOiBzdHJpbmc7XHJcbiAgcGFzc3dvcmQ6IHN0cmluZztcclxuICByZXBlYXRQYXNzd29yZDogc3RyaW5nO1xyXG4gIHJvbGU6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIExvZ2luRGF0YSB7XHJcbiAgZW1haWw6IHN0cmluZztcclxuICBwYXNzd29yZDogc3RyaW5nO1xyXG59XHJcblxyXG5sZXQgYXBpVXJsaXAgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19UUkFWRUxfU0VDVVJJVFk7XHJcblxyXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJVc2VyID0gYXN5bmMgKGRhdGE6IFJlZ2lzdGVyRGF0YSk6IFByb21pc2U8YW55PiA9PiB7XHJcbiAgY29uc3QgYXBpVXJsID0gYCR7YXBpVXJsaXB9L3RyYXZlbC9yZWdpc3RlcmA7XHJcbiAgY29uc29sZS5sb2coJ3RoZSBhcGlVUkwnLCBhcGlVcmwpO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJzExMScpXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGFwaVVybCwge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ3Nob3cgbWUgdGhlIHJlc3BvbnNlZHNhZGFzJywgcmVzcG9uc2UpO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2Uub2spe1xyXG4gICAgICBjb25zb2xlLmxvZygnZXJyb3Igd2hpbGUgY2FsbGluZyB0aGUgYXBpJywgcmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdzaG93IG1lIHRoZSByZXNwb25zZSEhJywgcmVzcG9uc2UpO1xyXG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2coJ3Nob3cgbWUgdGhlIHJlc3BvbnNlLnN0YXR1cycsIHJlc3BvbnNlLnN0YXR1cyk7XHJcblxyXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IHJlc3BvbnNlRGF0YSB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coJ1JlZ2lzdHJhdGlvbiBmYWlsZWQ6JywgcmVzcG9uc2VEYXRhLm1lc3NhZ2UpO1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiByZXNwb25zZURhdGEubWVzc2FnZSB8fCAnUmVnaXN0cmF0aW9uIGZhaWxlZCcsXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgY29uc29sZS5lcnJvcignVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBsb2dpblVzZXIgPSBhc3luYyAoZGF0YTogTG9naW5EYXRhKTogUHJvbWlzZTxhbnk+ID0+IHtcclxuICBjb25zdCBhcGlVcmwgPSBgJHthcGlVcmxpcH0vYXV0aC9sb2dpbmA7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGFwaVVybCwge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZygnc2hvdyBtZSB0aGUgcmVzcG9uc2UnLCByZXNwb25zZSk7XHJcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogcmVzcG9uc2VEYXRhIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiByZXNwb25zZURhdGEubWVzc2FnZSB8fCAnVW5rbm93biBlcnJvciBvY2N1cnJlZCcsXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1RoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCB0aGUgZmV0Y2ggb3BlcmF0aW9uOicsIGVycm9yKTtcclxuICAgIHRocm93IG5ldyBFcnJvcignTmV0d29yayBlcnJvcicpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBsb2dPdXRVc2VyID0gYXN5bmMgKGFjY2Vzc190b2tlbikgPT4ge1xyXG4gIGNvbnN0IGFwaVVybCA9IGAke2FwaVVybGlwfS9sb2dvdXRgO1xyXG4gIGNvbnNvbGUubG9nKCdzaG93IG1lIHRoZSBhY2Nlc3MgdG9rZW4nLCBhY2Nlc3NfdG9rZW4pO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChhcGlVcmwsIHtcclxuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FjY2Vzc190b2tlbn1gLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0xvZ291dCBmYWlsZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIGNvbnNvbGUubG9nKCdkYXRhJywgZGF0YSk7XHJcblxyXG4gICAgaWYgKGRhdGEuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnTG9nb3V0IGZhaWxlZCcgfTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIGVycm9yJyk7XHJcbiAgfVxyXG59OyJdLCJuYW1lcyI6WyJhcGlVcmxpcCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19UUkFWRUxfU0VDVVJJVFkiLCJyZWdpc3RlclVzZXIiLCJkYXRhIiwiYXBpVXJsIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsInJlc3BvbnNlRGF0YSIsImpzb24iLCJzdGF0dXMiLCJzdWNjZXNzIiwibWVzc2FnZSIsImVycm9yIiwiRXJyb3IiLCJsb2dpblVzZXIiLCJsb2dPdXRVc2VyIiwiYWNjZXNzX3Rva2VuIiwiQXV0aG9yaXphdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/userService.ts\n"));

/***/ })

});